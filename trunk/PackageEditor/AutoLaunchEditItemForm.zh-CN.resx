<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="label4.Text" xml:space="preserve">
		<value>安全模式：</value>
	</data>
	<data name="label3.Text" xml:space="preserve">
		<value>隔离：</value>
	</data>
	<data name="label2.Text" xml:space="preserve">
		<value>说明：</value>
	</data>
	<data name="label1.Text" xml:space="preserve">
		<value>应用程序的ID：</value>
	</data>
	<data name="btnOk.Text" xml:space="preserve">
		<value>确定</value>
	</data>
	<data name="btnCancel.Text" xml:space="preserve">
		<value>取消</value>
	</data>
	<data name="propertyCmdRadio.Text" xml:space="preserve">
		<value>特殊操作</value>
	</data>
	<data name="btnModify.Text" xml:space="preserve">
		<value>&amp;修改</value>
	</data>
	<data name="btnRemove.Text" xml:space="preserve">
		<value>&amp;删除</value>
	</data>
	<data name="btnAdd.Text" xml:space="preserve">
		<value>&amp;增加</value>
	</data>
	<data name="columnHeader1.Text" xml:space="preserve">
		<value>用户名</value>
	</data>
	<data name="columnHeader2.Text" xml:space="preserve">
		<value>指令</value>
	</data>
	<data name="columnHeader3.Text" xml:space="preserve">
		<value>文件</value>
	</data>
	<data name="columnHeader4.Text" xml:space="preserve">
		<value>值</value>
	</data>
	<data name="propertyMenuRadio.Text" xml:space="preserve">
		<value>从： 显示菜单选择</value>
	</data>
	<data name="$this.Text" xml:space="preserve">
		<value>网页</value>
	</data>
	<data name="comboBox.Items" xml:space="preserve">
		<value>开始（非虚拟化）</value>
	</data>
	<data name="comboBox.Items1" xml:space="preserve">
		<value>开始（虚拟化）</value>
	</data>
	<data name="comboBox.Items2" xml:space="preserve">
		<value>停止（虚拟化）</value>
	</data>
	<data name="comboBox.Items3" xml:space="preserve">
		<value>停止（非虚拟化）</value>
	</data>
	<data name="boxWait.Text" xml:space="preserve">
		<value>等待程序结束</value>
	</data>
	<data name="enterCommand" xml:space="preserve">
		<value>请输入一个指令来执行</value>
	</data>
	<data name="propertyLocalStorageExeDir.Text" xml:space="preserve">
		<value>执行文件目录下</value>
	</data>
	<data name="propertyLocalStorageCustom.Text" xml:space="preserve">
		<value>自定义地址</value>
	</data>
	<data name="propertyLocalStorageDefault.Text" xml:space="preserve">
		<value>默认：硬盘/Dropbox/USB（参照执行文件的存储地方）</value>
	</data>
	<data name="groupBox1.Text" xml:space="preserve">
		<value>基本属性</value>
	</data>
	<data name="columnFileSize.Text" xml:space="preserve">
		<value>大小</value>
	</data>
	<data name="columnFileType.Text" xml:space="preserve">
		<value>类型</value>
	</data>
	<data name="fileContextMenuDelete.Text" xml:space="preserve">
		<value>删除</value>
	</data>
	<data name="fileContextMenuProperties.Text" xml:space="preserve">
		<value>&amp;属性</value>
	</data>
	<data name="fsFolderInfoIsolationLbl.Text" xml:space="preserve">
		<value>文件夹隔离</value>
	</data>
	<data name="toolStripMenuItemExport.Text" xml:space="preserve">
		<value>&amp;导出为reg文件</value>
	</data>
	<data name="openToolStripMenuItem.Text" xml:space="preserve">
		<value>&amp;打开虚拟包</value>
	</data>
	<data name="newToolStripMenuItem.Text" xml:space="preserve">
		<value>&amp;新建空的虚拟包</value>
	</data>
	<data name="exportAsZeroInstallerXmlToolStripMenuItem.Text" xml:space="preserve">
		<value>&amp;导出为零安装的xml</value>
	</data>
	<data name="saveToolStripMenuItem.Text" xml:space="preserve">
		<value>&amp;保存</value>
	</data>
	<data name="saveasToolStripMenuItem.Text" xml:space="preserve">
		<value>保存为&amp;</value>
	</data>
	<data name="closeToolStripMenuItem.Text" xml:space="preserve">
		<value>&amp;关闭</value>
	</data>
	<data name="englishMenuItem.Text" xml:space="preserve">
		<value>英语</value>
	</data>
	<data name="frenchMenuItem.Text" xml:space="preserve">
		<value>法文</value>
	</data>
	<data name="spanishMenuItem.Text" xml:space="preserve">
		<value>西班牙语</value>
	</data>
	<data name="langToolStripMenuItem.Text" xml:space="preserve">
		<value>&amp;语言</value>
	</data>
	<data name="exitToolStripMenuItem.Text" xml:space="preserve">
		<value>&amp;出口</value>
	</data>
	<data name="fileToolStripMenuItem.Text" xml:space="preserve">
		<value>&amp;文件</value>
	</data>
	<data name="dropboxLabel.Text" xml:space="preserve">
		<value>发布</value>
	</data>
	<data name="label10.Text" xml:space="preserve">
		<value>文件版本：</value>
	</data>
	<data name="groupBox3.Text" xml:space="preserve">
		<value>拓展属性</value>
	</data>
	<data name="label6.Text" xml:space="preserve">
		<value>图标：</value>
	</data>
	<data name="lnkAutoLaunch.Text" xml:space="preserve">
		<value>更改</value>
	</data>
	<data name="lnkChangeIcon.Text" xml:space="preserve">
		<value>更改图标</value>
	</data>
	<data name="label5.Text" xml:space="preserve">
		<value>数据存储器：</value>
	</data>
	<data name="propertyIsolationDataMode.Text" xml:space="preserve">
		<value>数据模式：应用程序只能存储文件到我的文档，桌面和网络硬盘</value>
	</data>
	<data name="propertyIsolationIsolated.Text" xml:space="preserve">
		<value>隔离：应用程序不能修改系统</value>
	</data>
	<data name="propertyIsolationMerge.Text" xml:space="preserve">
		<value>完全访问：应用程序可以修改系统文件和寄存器</value>
	</data>
	<data name="lblAutoLaunch.Text" xml:space="preserve">
		<value>开始：</value>
	</data>
	<data name="tabGeneral.Text" xml:space="preserve">
		<value>简介</value>
	</data>
	<data name="fsAddBtn.Text" xml:space="preserve">
		<value>添加</value>
	</data>
	<data name="fsAddBtn.ToolTipText" xml:space="preserve">
		<value>添加文件</value>
	</data>
	<data name="fsAddDirBtn.ToolTipText" xml:space="preserve">
		<value>添加文件夹</value>
	</data>
	<data name="fsAddEmptyDirBtn.ToolTipText" xml:space="preserve">
		<value>添加空文件夹</value>
	</data>
	<data name="fsRemoveBtn.ToolTipText" xml:space="preserve">
		<value>删除文件或文件夹</value>
	</data>
	<data name="fsSaveFileAsBtn.ToolTipText" xml:space="preserve">
		<value>另存为</value>
	</data>
	<data name="tabFileSystem.Text" xml:space="preserve">
		<value>文件</value>
	</data>
	<data name="regRemoveBtn.ToolTipText" xml:space="preserve">
		<value>删除</value>
	</data>
	<data name="regEditBtn.ToolTipText" xml:space="preserve">
		<value>编辑注册表</value>
	</data>
	<data name="regImportBtn.Text" xml:space="preserve">
		<value>导入</value>
	</data>
	<data name="regImportBtn.ToolTipText" xml:space="preserve">
		<value>导入reg文件</value>
	</data>
	<data name="regExportBtn.ToolTipText" xml:space="preserve">
		<value>导出所选注册信息到reg文件中</value>
	</data>
	<data name="tabRegistry.Text" xml:space="preserve">
		<value>注册</value>
	</data>
	<data name="propertyExpiration.Text" xml:space="preserve">
		<value>终止日期</value>
	</data>
	<data name="groupBox6.Text" xml:space="preserve">
		<value>结束</value>
	</data>
	<data name="chkCleanDoneDialog.Text" xml:space="preserve">
		<value>清除完毕时弹出对话框</value>
	</data>
	<data name="rdbCleanNone.Text" xml:space="preserve">
		<value>不删除，让应用程序准备运行（最快）</value>
	</data>
	<data name="chkCleanAsk.Text" xml:space="preserve">
		<value>删除前确认</value>
	</data>
	<data name="rdbCleanAll.Text" xml:space="preserve">
		<value>删除全部虚拟数据（数据文稿和之前的设置将会丢失）</value>
	</data>
	<data name="rdbCleanRegOnly.Text" xml:space="preserve">
		<value>无痕登录（登录信息的更改将会保存在文件中）</value>
	</data>
	<data name="groupBox7.Text" xml:space="preserve">
		<value>删除应用程序所有信息</value>
	</data>
	<data name="label8.Text" xml:space="preserve">
		<value>例子：“iexplore.exe;myapp.exe”</value>
	</data>
	<data name="label7.Text" xml:space="preserve">
		<value>排除子程序在虚拟机外</value>
	</data>
	<data name="lnkCustomEvents.Text" xml:space="preserve">
		<value>自定义事件</value>
	</data>
	<data name="groupBox5.Text" xml:space="preserve">
		<value>高级</value>
	</data>
	<data name="label9.Text" xml:space="preserve">
		<value>工作室</value>
	</data>
	<data name="lnkPackageEdit.Text" xml:space="preserve">
		<value>打开虚拟应用程序</value>
	</data>
	<data name="label11.Text" xml:space="preserve">
		<value>最近编辑</value>
	</data>
	<data name="tabWelcome.Text" xml:space="preserve">
		<value>欢迎</value>
	</data>
	<data name="cbDontShowAgain.Text" xml:space="preserve">
		<value>不再提示</value>
	</data>
</root>